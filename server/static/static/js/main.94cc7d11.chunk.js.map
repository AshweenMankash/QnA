{"version":3,"sources":["ActionTypes/ActionTypes.js","Reducers/index.js","components/CheckboxArt.js","Actions/searchActions.js","ActionTypes/UrlTypes.js","components/InfiniteScrollAlert.js","Containers/SearchPage/SearchPageContext.js","Containers/SearchPage/Components/SearchResults.jsx","Containers/SearchPage/Components/ResponsiveSearchBox.js","Containers/SearchPage/Components/SearchComponent.jsx","components/ReactLinkToDetails.js","Containers/SearchPage/index.jsx","Containers/DetailsPage/style.js","components/LinkToDetails.js","Containers/DetailsPage/index.jsx","App.js","serviceWorker.js","index.js"],"names":["UPDATE_POST_FILTER","LOADING_SCROLL","APPEND_SEARCH_RESULTS","SET_REACT_POST_DETAILS","initialState","PiazzaSearchResults","filterState","searchText","tags","pageState","loading","searchResults","undefined","scrollLoading","piazzaPostDetails","combineReducers","searchState","state","action","type","detailIds","data","status","results","cursor","concat","Object","assign","length","classid","id","filter","getPiazzaDetails","getCursor","isSearchPageLoading","isInfiniteLoading","SearchPageFilters","checkStylez","css","MissingCheckbox","props","term","src","alt","GoodCheckbox","HTTP_MSGS","404","405","initialData","updateSearchResults","appendSearchResults","InfiniteScroll","filters","pickUpFromHere","dispatch","deepcopy","JSON","parse","stringify","encodedtags","keys","forEach","key","push","skip","join","setTimeout","axios","qs","headers","then","resp","this","reject","catch","eer","console","log","InfiniteScrollAlert","style","className","PostsSelected4Details","createContext","selected","update","dispatchToProps","SearchResults","scrollListener","bind","window","addEventListener","removeEventListener","isLoading","innerHeight","scrollY","document","body","offsetHeight","active","map","result","index","ResultCard","includes","topic","Component","title","post","subject","subjectStyle","isSelectedStyle","Consumer","onClick","Card","elevation","marginLeft","marginRight","marginBottom","padding","tagsStyle","goodthingStyle","tagsList","TagsView","text","GoodThing","hits","tag","created","tagsView","summariez","unique","searchTermsPresent","date","dangerouslySetInnerHTML","__html","dict","paraStyle","short","content","replace","metaresult","connect","tags_contaier","hamburgerIcons","gen","ResponsiveSearchBox","React","useState","hamShow","toggleBurger","searchInput","navItem","navStyles","updateTags","updateFilter","updateMisc","value","obj","check","e","stopPropagation","htmlFor","placeholder","onChange","event","target","CircularProgress","Button","size","variant","SearchSequence","checked","newTags","encodedfilter","set_filter","LinearProgress","LinkToDetails","stickybutton","to","SearchPage","Divider","hidden","copytext","ids","return","readOnly","location","protocol","host","copyText","getElementById","select","setSelectionRange","execCommand","textContent","DetailsJsonSearchSequence","updatePostDetailsReact","dump","DetailsPage","details","DetailsStyle","tagI","replies","reply","replyI","followups","followup","follI","zIndex","renderDetails","App","setArray","Provider","temp","i","fontFamily","exact","path","Boolean","hostname","match","store","redux_dev","__REDUX_DEVTOOLS_EXTENSION__","createStore","rootReducer","compose","applyMiddleware","ThunkMiddleware","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"gLAIaA,EAAqB,gDAErBC,EAAiB,oCACjBC,EAAwB,iCACxBC,EAAyB,4DCgBhCC,EAAe,CACnBC,oBAAsB,GACpBC,YAAY,2BAhBH,CACX,2BAA2B,EAC3B,wBAAwB,IAcX,IAEPC,WAAY,GACZC,KAda,CACjB,KAAO,EACP,KAAO,EACP,KAAO,EACP,KAAO,EACP,SAAW,KAYXC,UAAU,CACNC,SAAQ,EACRC,mBAAeC,EACfC,eAAc,EACdC,kBAAmB,KAqFZC,cAAgB,CAC3BC,YArCgB,WAAkD,IAAjDC,EAAgD,uDAA1Cb,EAAaC,oBAAoBa,EAAS,uCACjE,OAAOA,EAAOC,MACV,KAAKhB,EACH,OAAO,2BACFc,GADL,IAEEG,UAAWF,EAAOG,OAEtB,IDzF0B,qBC0FtB,GAAmB,MAAhBH,EAAOI,OACN,OAAOL,EAEN,GAAoB,MAAjBC,EAAOI,OACX,OAAO,2BACJL,GADH,IAEAM,QAASL,EAAOK,QAChBC,OAAQN,EAAOM,SAGd,GAAmB,MAAhBN,EAAOI,OACZ,OAAOL,EAEV,MACF,KAAKf,EACD,OAAO,2BACFe,GADL,IAEEM,QAASN,EAAMM,QAAQE,OAAOP,EAAOK,SACrCC,OAAQN,EAAOM,SAEvB,QACI,OAAOP,IASfR,UAnFe,WAAwC,IAAvCQ,EAAsC,uDAAhCb,EAAaK,UAAUS,EAAS,uCAExD,OAAOA,EAAOC,MAER,ID1CgB,WC4CZ,OADWO,OAAOC,OAAO,GAAGV,EAAM,CAACP,SAAQ,IAE/C,KAAKT,EACD,OAAOyB,OAAOC,OAAO,GAAGV,EAAM,CAACJ,eAAc,IACjD,ID9C0B,qBC+CxB,OAAOa,OAAOC,OAAO,GAAGV,EAAM,CAACP,SAAQ,EAAMG,eAAc,IAC7D,KAAKV,EACH,OAAOuB,OAAOC,OAAO,GAAGV,EAAM,CAACP,SAAQ,EAAOI,kBAAmBI,EAAOG,OAC1E,KAAKnB,EAEH,OAAoB,MAAjBgB,EAAOI,QAAmBJ,EAAOK,QAAQK,OAInCF,OAAOC,OAAO,GAAGV,EAAM,CAACJ,eAAc,IAHtCa,OAAOC,OAAO,GAAGV,EAAM,CAACJ,eAAc,IAKjD,QACI,OAAOI,IA8DfX,YA1DiB,WAA0C,IAAzCW,EAAwC,uDAAlCb,EAAaE,YAAYY,EAAS,uCAC1D,OAAOA,EAAOC,MACV,ID/DuB,0CCgErB,OAAO,2BACFF,GADL,IAEEY,QAASX,EAAOY,KAEpB,KAAK9B,EAIH,OAAOkB,EAAOa,OAChB,QACE,OAAOd,MAuDJe,EAAmB,SAACf,GAAD,OAAUA,EAAMR,UAAUK,mBAC7CmB,EAAY,SAAChB,GAAD,OAASA,EAAMD,YAAYQ,QACvCU,EAAsB,SAACjB,GAAD,OAASA,EAAMR,UAAUC,SAC/CyB,EAAoB,SAAClB,GAAD,OAASA,EAAMR,UAAUI,eAC7CF,EAAgB,SAACM,GAAD,OAAWA,EAAMD,YAAYO,SAC7Ca,EAAoB,SAACnB,GAAD,OAAWA,EAAMX,a,kTCvIlD,IAAM+B,EAAcC,YAAH,KAWJC,EAAkB,SAACC,GAAS,IAChCC,EAAQD,EAARC,KAEP,OACE,oBAAMH,IAAKD,GACT,mBAAKK,IAAI,6BACLC,IAAI,iDACPF,IAOMG,EAAe,SAACJ,GAAS,IAC7BC,EAAQD,EAARC,KAEP,OACE,oBAAMH,IAAKD,GACT,mBAAKK,IAAI,6BACLC,IAAI,gCACPF,I,kCCrBDI,EAAW,CACbC,IAAI,aACJC,IAAI,2BAkBFC,EAAc,CAClB,QAAW,GACX,OAAU,MAECC,EAAsB,WAAiC,IAAhC3B,EAA+B,uDAAxB,IAAID,EAAoB,uDAAf2B,EAClD,MAAO,CACH7B,KHtC4B,qBGuC5BG,OAAOA,EACPC,QAAQF,EAAI,QACZG,OAAQH,EAAI,SAaL6B,EAAqB,SAAC5B,GAAD,IAAQD,EAAR,uDAAa2B,EAAb,MAA6B,CAC3D7B,KAAKjB,EACLqB,QAAQF,EAAI,QACZG,OAAQH,EAAI,OACZC,WAmCS6B,EAAiB,SAACC,EAAQC,GAAT,OAA4B,SAAAC,GACxDA,EAjEgC,CAChCnC,KAAMlB,IAiEN,IAAIsD,EAAWC,KAAKC,MAAMD,KAAKE,UAAUN,IACrCO,EAAc,GAClBjC,OAAOkC,KAAKL,EAAS/C,MAAMqD,SAAQ,SAASC,GACvCP,EAAS/C,KAAKsD,IACfH,EAAYI,KAAKD,MAGrBP,EAASS,KAAOX,EAChBE,EAAS/C,KAAOmD,EAAYM,KAAK,KAIjCC,YAAW,WAETC,IAAK,IAAL,UC5G4B,cD4G5B,YAAoCC,IAAGV,UAAUH,IACjD,CACEc,QAAS,CACP,eAAgB,qDAGnBC,MAAK,SAASC,GACI,MAAdA,EAAKjD,OAKNkD,KAAKC,OAAO,CACV,KAAQF,EAAKjD,OACb,QAAWiD,IANbjB,EAASJ,EAAoB,IAAIqB,EAAKlD,UAUzCqD,OAAM,SAASC,GACdC,QAAQC,IAAIF,GACZrB,EAASJ,EAAoB,UAK/B,O,yhDErIJ,IAmFe4B,EAnFa,WAI1B,IAAMC,EAAQzC,YAAH,KAmEX,OACE,mBAAKA,IAAKyC,GACR,2CACA,mBAAKC,UAAU,cACf,mBAAKA,UAAU,cACf,mBAAKA,UAAU,kBC9ERC,EAAwBC,wBAAc,CACjDC,SAAU,GACVC,OAAQ,e,w1BCYV,IASMC,GAAkB,CACtBlC,kBAKImC,G,kDAEJ,aAAc,IAAD,8BACX,gBACKC,eAAiB,EAAKA,eAAeC,KAApB,gBAFX,E,gEAOXC,OAAOC,iBAAiB,SAASlB,KAAKe,kB,6CAGtCE,OAAOE,oBAAoB,SAASnB,KAAKe,kB,uCAKpCf,KAAKhC,MAAM7B,cAAciB,SAAW4C,KAAKhC,MAAMoD,WAC3CH,OAAOI,YAAcJ,OAAOK,SAAYC,SAASC,KAAKC,cAGpDzB,KAAKhC,MAAMW,eAAeqB,KAAKhC,MAAMY,QAC1BoB,KAAKhC,MAAMhB,U,+BAMjC,IAAID,EAAUiD,KAAKhC,MAAM7B,cACrBuF,EAAS1B,KAAKhC,MAAM0D,OACxB,OAEM,4BACetF,IAAZW,IAA0BA,GAAW,6CACpCA,GAAWA,EAAQ4E,KAAI,SAASC,EAAOC,GACtC,OAAQ,YAACC,GAAD,CAAYnB,SAAUe,EAAOK,SAASH,EAAOtE,IAAKgC,IAAG,iBAAYuC,GAASG,MAASJ,OAE5F5B,KAAKhC,MAAMoD,WAAa,YAAC,EAAD,W,GArCVa,aA+I5B,SAASH,GAAW9D,GAChB,IAAIgE,EAAQhE,EAAMgE,MACdE,EAAQF,EAAMG,KAAKC,QAIjBC,EAAcvE,YAAF,KAMZwE,EAAgBxE,YAAD,KAKrB,OACE,YAAC2C,EAAsB8B,SAAvB,MACI,gBAAE3B,EAAF,EAAEA,OAAF,OACC,mBAAK4B,QAAS,WACb5B,EAAOoB,EAAM1E,MAEb,YAACmF,EAAA,EAAD,CAEK3E,IAAKE,EAAM2C,UAAY2B,EACvBI,UAAW,EACXnC,MAAO,CAACoC,WAAW,OAAOC,YAAY,OAAOC,aAAa,OAAOC,QAAQ,SArE1F,SAAkBd,GAChB,IAAMe,EAAYjF,YAAH,MAKTkF,EAAiBlF,YAAH,KAKhB9B,EAAOgG,EAAMhG,KAGbiH,EAAW,GACTC,EAAY,SAAAlF,GACd,OAAO,oBAAMF,IAAKiF,GAAY/E,EAAMmF,OAElCC,EAAY,SAAApF,GAChB,OAAQ,oBAAMF,IAAKkF,GAAiBhF,EAAMmF,KAAlC,KAA0CnF,EAAMqF,OAgB1D,OAbArH,EAAKqD,SAAQ,SAASiE,GACpBL,EAAS1D,KAAM,YAAC2D,EAAD,CAAU5D,IAAG,eAAUgE,GAAOH,KAAMG,QAGlDtB,EAAM,WACPiB,EAAS1D,KAAK,YAAC6D,EAAD,CAAW9D,IAAG,wBAAmB0C,EAAMuB,SACrCJ,KAAM,gBAAiBE,KAAMrB,EAAM,aAElDA,EAAM,WACPiB,EAAS1D,KAAK,YAAC6D,EAAD,CAAW9D,IAAG,sBAAiB0C,EAAMuB,SACnCJ,KAAM,cAAeE,KAAMrB,EAAM,aAIjD,mBAAKzB,MAAO,CAACuC,QAAQ,QAASG,GAmCjBO,CAASxB,GACTA,EAAMyB,WAvHvB,SAA4BA,EAAUC,GACpC,IAAInD,EAAOzC,YAAF,MAIT,OAAQ,mBAAKA,IAAKyC,GACbrD,OAAOkC,KAAKqE,GAAW9B,KAAI,SAAS1D,GACrC,OAAGwF,EAAUxF,GAAMb,OACV,YAAC,EAAD,CAAckC,IAAG,oBAAerB,EAAf,YAAuByF,GAAUzF,KAAMA,IAGxD,YAAC,EAAD,CAAiBqB,IAAG,uBAAkBrB,EAAlB,YAA0ByF,GAAUzF,KAAMA,QA4GzC0F,CAAmB3B,EAAMyB,UAAUzB,EAAM4B,MAC7D,mBAAKC,wBAAyB,CAACC,OAAO5B,GAAQpE,IAAKuE,IACnD,uBACCL,EAAMyB,WAAavG,OAAOkC,KAAK4C,EAAMyB,WAAW9B,KAAI,SAAS1D,GAC5D,OArGlB,SAAoBA,EAAK8F,EAAKL,GAC5B,IAAMM,EAAUlG,YAAD,MAOf,OAAQ,mBAAKwB,IAAG,sBAAiBrB,EAAjB,YAAyByF,IAEtCK,EAAK9F,GAAMb,OAAU2G,EAAK9F,GAAM0D,KAAI,SAASsC,EAAMpC,GAElD,IAAIqC,EAAUD,EAAM,GAAGE,QAAQlG,EAAjB,aAA4BA,EAA5B,SACd,OACE,oBAAMqB,IAAG,UAAKrB,EAAL,mBAAoB4D,GAAS/D,IAAKkG,EAAWH,wBAAyB,CAACC,OAAO,MAAD,OAAOI,EAAP,aAErF,IAqFgBE,CAAWnG,EAAK+D,EAAMyB,UAAUzB,EAAMuB,iBAchDc,oBA9MM,SAAA5H,GACnB,MAAO,CACL2E,UAAWzD,EAAkBlB,GAC7BN,cAAeA,EAAcM,GAC7BmC,QAAShB,EAAkBnB,GAC3BO,OAAQS,EAAUhB,MAyMcoE,GAArBwD,CAAsCvD,I,+4HCpNpD,IAAMwD,GAAcxG,YAAD,MASdyG,GAAezG,YAAD,MAYd0G,GAAM1G,YAAH,MA6NM2G,OAvNf,SAA6BzG,GAAQ,IAAD,EACL0G,IAAMC,UAAS,GADV,mBAC7BC,EAD6B,KACrBC,EADqB,KAI5BC,EAAchH,YAAH,MAiBXiH,EAAQjH,YAAD,MAuBLkH,EAAYlH,YAAH,KAWJ8G,EAAW,OAAS,OAiBzBK,EAAa,SAACjJ,GAClBgC,EAAMkH,aAAN,2BACKlH,EAAMY,SADX,IAEE5C,WAKEmJ,EAAa,SAAC7F,EAAI8F,GAEtB,IAAIC,EAAG,eACFrH,EAAMY,SAEXyG,EAAI/F,GAAO8F,EACXpH,EAAMkH,aAAaG,IAGvB,OACE,mBAAKvH,IAAKA,YAAF,QACN8G,GACA,mBAAK9G,IAAKyG,GAAgB/B,QAAS,kBAAIqC,GAAcD,KACnD,iBAAGpE,UAAU,MAAb,WAGF,mBAAKA,UAAU,YACb,mBAAKA,UAAU,QAAQ1C,IAAKkH,GAC1B,mBAAKlH,IAAK0G,IACR,mBAAK1G,IAAKA,YAAF,OACN,+BACA,mBAAKA,IAAKyG,GAAe/B,QAAS,kBAAIqC,GAAcD,KAApD,YAIJ,mBAAKtH,GAAG,oBAAoBQ,IAAKwH,IAC/B,mBAAKxH,IAAKA,YAAF,OAIN,mBAAKA,IAAKA,YAAF,MAA2C0E,QAAS,SAAS+C,GAAGA,EAAEC,oBACxE,qBAAOC,QAAQ,eACb,qBAAO9I,KAAK,OACZ+I,YAAa,yBACb5H,IAAKgH,EAAaM,MAAOpH,EAAMY,QAAQ7C,WACrC4J,SAAU,SAACC,GAlDF,IAACzC,IAkD6ByC,EAAMC,OAAOT,MAjDlEpH,EAAMkH,aAAN,2BACKlH,EAAMY,SADX,IAEE7C,WAAYoH,UAmDR,mBAAKrF,IAAKA,YAAF,OACLE,EAAM9B,QAAW,YAAC4J,GAAA,EAAD,MACf,YAACC,GAAA,EAAD,CAASC,KAAK,QAAQC,QAAQ,WAAWzD,QAAS,WAGjDxE,EAAMkI,eAAelI,EAAMY,SAC3BiG,GAAcD,KAJf,YAWH,mBAAKtH,GAAG,iBAAiBQ,IAAKwG,IAE5B,mBAAK/D,MAAO,CAACvD,OAAO,WAAYsC,IAAG,0BAA6BkB,UAAU,kBAAkB1C,IAAKiH,GAC9F,qBAAOpI,KAAK,WAAWW,GAAE,0BACxB6I,QAASnI,EAAMY,QAAQ,2BACvB+G,SAAU,WAETR,EAAW,2BAA2BnH,EAAMY,QAAQ,+BAGtD,qBAAO6G,QAAO,4BACd,mBAAKjD,QAAS,WAGb2C,EAAW,2BAA2BnH,EAAMY,QAAQ,6BACnD4B,UAAU,OAAO,4BAIrB,mBAAKD,MAAO,CAACvD,OAAO,WAAYsC,IAAG,uBAA0BkB,UAAU,kBAAkB1C,IAAKiH,GAC3F,qBAAOpI,KAAK,WAAWW,GAAE,uBACxB6I,QAASnI,EAAMY,QAAQ,wBACvB+G,SAAU,WAGTR,EAAW,wBAAwBnH,EAAMY,QAAQ,4BAEnD,qBAAO6G,QAAO,yBACd,mBAAKjD,QAAS,WAGb2C,EAAW,wBAAwBnH,EAAMY,QAAQ,0BAElD4B,UAAU,OAAO,0BAMzB,kBAAI1C,IAAKA,YAAF,OAAP,YACE,mBAAKR,GAAG,YAAYQ,IAAKwG,IAIlBpH,OAAOkC,KAAKpB,EAAMY,QAAQ5C,MAAM2F,KAAI,SAASrC,GAC5C,OAAQ,mBAAKiB,MAAO,CAACvD,OAAO,WAAYsC,IAAG,oBAAeA,GAAOkB,UAAU,kBAAkB1C,IAAKiH,GAC/F,qBAAOpI,KAAK,WAAWW,GAAE,cAASgC,GACjC6G,QAASnI,EAAMY,QAAQ5C,KAAKsD,GAC5BqG,SAAU,WAEV,IAAIS,EAAUpI,EAAMY,QAAQ5C,KAC3BoK,EAAQ9G,IAAQ8G,EAAQ9G,GAExB2F,EAAWmB,MAGb,qBAAOX,QAAO,cAASnG,KACvB,mBAAKkD,QAAS,WAEd,IAAI4D,EAAUpI,EAAMY,QAAQ5C,KAC3BoK,EAAQ9G,IAAQ8G,EAAQ9G,GAExB2F,EAAWmB,IAGZ5F,UAAU,OAAOlB,QAI5B,6BAiBRgG,GAAQxH,YAAH,MC7OL+C,GAAkB,CACtBqF,eN0H4B,SAACtH,GAAD,OAAa,SAAAE,GAGvCA,EAnH0B,CAC1BnC,KH5BoB,aGiJpB,IAAI0J,EAAgBrH,KAAKC,MAAMD,KAAKE,UAAUN,IAS1CO,EAAc,GAClBjC,OAAOkC,KAAKiH,EAAcrK,MAAMqD,SAAQ,SAASC,GAC5C+G,EAAcrK,KAAKsD,IACpBH,EAAYI,KAAKD,MAGrB+G,EAAcrK,KAAOmD,EAAYM,KAAK,KACtCE,IAAK,IAAL,UC/J4B,cD+J5B,YAAoCC,IAAGV,UAAUmH,IAC/C,CACExG,QAAS,CACP,eAAgB,qDAGrBC,MAAK,SAASC,GACb,GAAiB,MAAdA,EAAKjD,OAKJ,OAJFgC,EAASL,EAAoBsB,EAAKjD,OAAOiD,EAAKlD,YAC3CkD,EAAKlD,KAAKE,QAAQK,OAhCf,IAiCJ0B,EAASH,EAAe0H,EAActG,EAAKlD,KAAKG,UAK/B,MAAhB+C,EAAKjD,QAMgB,MAAhBiD,EAAKjD,OALXkD,KAAKC,OAAO,CACV,KAAQF,EAAKjD,OACb,QAAWuB,EAAU,GAAD,OAAI0B,EAAKjD,WAW/BkD,KAAKC,OAAO,CACV,KAAQF,EAAKjD,OACb,QAAWiD,OAMlBG,OAAM,SAASqF,GACdnF,QAAQC,IAAR,gBAAqBrB,KAAKE,UAAUqG,GAApC,OAKAzG,EAASL,EAAoB,IAAI,UM1LrC6H,WNCwB,SAAC/I,GACzB,MAAO,CACLZ,KAAKnB,EACL+B,YMmBW8G,gBA9BM,SAAA5H,GAAK,MAAI,CAC5B2E,UAAW1D,EAAoBjB,GAC/BmC,QAAShB,EAAkBnB,MA4BOoE,GAArBwD,EApBG,SAACrG,GAAS,IACnBoD,EAAsBpD,EAAtBoD,UAAWxC,EAAWZ,EAAXY,QAChB,OACI,6BAIIwC,GAAc,kBAACmF,GAAA,EAAD,MAEhB,kBAAC,GAAD,CACIrK,QAAS8B,EAAMoD,UAAWxC,QAASA,EACnCsH,eAAgBlI,EAAMkI,eAAgBhB,aAAclH,EAAMsI,iB,gSCFzDE,OA1Bf,SAAuBxI,GACrB,IAAMyI,EAAe3I,YAAH,MAYlB,OAAGE,EAAM2C,SAASvD,OAEd,mBAAKU,IAAK2I,GAER,YAAC,IAAD,CAAMC,GAAG,YAAT,gBAAiC,uBAAjC,MAA2C1I,EAAM2C,SAASvD,OAA1D,YAKG,yBCKIuJ,GAxBE,SAAC3I,GAEd,OACI,yBAAKwC,UAAU,mBACb,kBAAC,GAAD,MACA,kBAACoG,EAAA,EAAD,CAASX,QAAQ,WAGjB,kBAACxF,EAAsB8B,SAAvB,MAEE,gBAAE5B,EAAF,EAAEA,SAAF,OACG,6BACC,kBAAC,GAAD,CAAeA,SAAUA,IACzB,kBAAC,GAAD,CAAee,OAAQf,U,ubCnBvC,IA2BeJ,GA3BDzC,YAAH,M,ypCC0FI0I,OAvFf,SAAuBxI,GACrB,IAAM6I,EAAQ/I,YAAF,MAcNgJ,EAAWhJ,YAAH,MA2CR2I,EAAe3I,YAAH,MAUlB,IAAGE,EAAM+I,IAAI3J,OAeX,OAAO,wBAdU6D,OACjB+F,OACE,mBAAKlJ,IAAK2I,GAEV,qBAAO9J,KAAK,OAAOsK,UAAQ,EAACnJ,IAAK+I,EAAQzB,MAAK,UAAKnE,OAAOiG,SAASC,SAArB,aAAkClG,OAAOiG,SAASE,KAAlD,8BAA4EpJ,EAAM+I,IAAItH,KAAK,MAAQnC,GAAG,YACtJ,YAACyI,GAAA,EAAD,CAAQpJ,KAAK,SAAU6F,QArED,WACtB,IAAI6E,EAAW9F,SAAS+F,eAAe,WACvCD,EAASE,SACTF,EAASG,kBAAkB,EAAG,OAC9BjG,SAASkG,YAAY,QAEPlG,SAAS+F,eAAe,aAC9BI,YAAc,UACtBtH,QAAQC,IAAI,YA6DqCvC,IAAKgJ,GACpD,8BAAS,uBAAT,IAAiB9I,EAAM+I,IAAI3J,OAA3B,yBACI,oBAAMoD,UAAU,cAAclD,GAAG,aAAjC,yBC5DJuD,GAAkB,CACtB8G,0BX2CuC,SAACZ,GAAD,OAAS,SAAAjI,GAChDA,EAtC4B,CAC1BnC,KH5BoB,aGoEtBgD,IAAK,IAAL,iCAAuCoH,EAAItH,KAAK,OAC/CK,MAAK,SAASC,GACI,MAAdA,EAAKjD,OAKJkD,KAAKC,OAAO,CACV,KAAQF,EAAKjD,OACb,QAAWiD,IANfjB,EAzByB,WAAwB,IAAvBhC,EAAsB,uDAAf,IAAID,EAAW,uDAAN,GAC9C,MAAO,CACLF,KAAMhB,EACNmB,SACAD,QAqBW+K,CAAuB7H,EAAKjD,OAAOiD,EAAKlD,KAAKgL,UAUzD3H,OAAM,SAASqF,GACdnF,QAAQC,IAAR,gBAAqBrB,KAAKE,UAAUqG,GAApC,OAKAzG,EAAc,UW3DZgJ,G,kLAGC9H,KAAKhC,MAAM+I,IAAI3J,QAAU4C,KAAKhC,MAAM+I,IAAI3J,SAAW4C,KAAKhC,MAAM+J,QAAQ3K,QACvE4C,KAAKhC,MAAM2J,0BAA0B3H,KAAKhC,MAAM+I,O,sCAKlD,OAAQ,mBAAKjJ,IAAKkK,IACfhI,KAAKhC,MAAM+J,QAAQ3K,OAAS,GAAK4C,KAAKhC,MAAM+J,QAAQpG,KAAI,SAASQ,EAAKN,GACrE,OACE,mBAAKvC,IAAG,iBAAYuC,GAASrB,UAAU,aAEjC2B,EAAKnG,KAAK2F,KAAI,SAAS2B,EAAI2E,GACzB,OACE,oBAAM3I,IAAG,eAAUuC,EAAV,gBAAuBoG,GAC1BzH,UAAU,OACb8C,MAKT,iBAAG9C,UAAU,oBAAoB2B,EAAKA,KAAKC,SAC3C,iBAAG5B,UAAU,oBAAoB2B,EAAKA,KAAK+B,SAE3C,iCAEE/B,EAAK+F,QAAQvG,KAAI,SAASwG,EAAMC,GAC9B,OACA,mBAAK9I,IAAG,eAAUuC,EAAV,kBAAyBuG,GAC7B5H,UAAU,SACZ,qBAAI2H,EAAMA,OACTA,EAAME,UAAUjL,OAAS,GAAM,mCAE5B+K,EAAME,UAAUjL,OAAS,GAAK+K,EAAME,UAAU1G,KAAI,SAAS2G,EAASC,GAC9D,OACE,iBAAGjJ,IAAG,eAAUuC,EAAV,kBAAyBuG,EAAzB,qBAA4CG,GAChD/H,UAAU,YACT8H,EAASH,cAY9B,8B,+BAUH,IAAD,EACgBnI,KAAKhC,MAAtBoD,EADC,EACDA,UAAU2F,EADT,EACSA,IACf,OACI,mBAAKvG,UAAU,wBACdY,GAAc,YAACmF,GAAA,EAAD,MAGf,YAACR,GAAA,EAAD,CAAQpJ,KAAK,UACX,YAAC,IAAD,CAAM+J,GAAG,IAAInG,MAAO,CAACiI,OAAQ,IAA7B,mBAIF,YAAC,GAAD,CAAgBzB,IAAKA,IACnB,YAACH,EAAA,EAAD,CAASX,QAAQ,YAGf7E,GAAapB,KAAKyI,qB,GA7EJxG,aAoFXoC,gBAjGM,SAAA5H,GAAK,MAAI,CAC5B2E,UAAW1D,EAAoBjB,GAC/BsL,QAASvK,EAAiBf,MA+FQoE,GAArBwD,CAAsCyD,ICxDtCY,OAhDf,WAAgB,IAAD,EAEc/D,mBAAS,IAFvB,mBAERhE,EAFQ,KAEEgI,EAFF,KA8Bb,OACE,kBAAClI,EAAsBmI,SAAvB,CACIxD,MAAO,CACHzE,WACAC,OA/Ba,SAACtD,GACtB,IAAIuL,EAAO,GACX,GAAGlI,EAASoB,SAASzE,GAAI,CAGvB,IAAI,IAAIwL,EAAE,EAAEA,EAAEnI,EAASvD,OAAO0L,IACzBnI,EAASmI,KAAOxL,GAIjBuL,EAAKtJ,KAAKoB,EAASmI,IAMvBH,EAASE,QAGTA,EAAO7J,KAAKC,MAAMD,KAAKE,UAAUyB,KAC5BpB,KAAKjC,GACVqL,EAASE,MAYT,yBAAKtI,MAAO,CAACwI,WAAW,WACtB,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,YAChB,kBAAC,GAAD,CAAalC,IAAKpG,QCvCRuI,QACW,cAA7BjI,OAAOiG,SAASiC,UAEe,UAA7BlI,OAAOiG,SAASiC,UAEhBlI,OAAOiG,SAASiC,SAASC,MACvB,2DCAN,IAEIC,GAFAC,GAAYrI,OAAOsI,8BAAgCtI,OAAOsI,+BAI5DF,QADajN,IAAZkN,GACOE,YAAYC,EAAYC,YAAQC,YAAgBC,KAAiBN,KAGjEE,YAAYC,EAAYE,YAAgBC,MAIlDC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACC,kBAAC,IAAD,CAAUV,MAAOA,IAChB,kBAAC,IAAD,KACE,kBAAC,GAAD,SAIJ9H,SAAS+F,eAAe,SD8FpB,kBAAmB0C,WACrBA,UAAUC,cAAcC,MACrBpK,MAAK,SAAAqK,GACJA,EAAaC,gBAEdlK,OAAM,SAAAmK,GACLjK,QAAQiK,MAAMA,EAAMC,a","file":"static/js/main.94cc7d11.chunk.js","sourcesContent":["export const TOGGLE_TAG = \"TOGGLE_TAG\"\nexport const SEARCH = \"SEARCH\"\nexport const FETCHING = \"FETCHING\"\nexport const SET_SEARCH_RESULTS = \"SET_SEARCH_RESULTS\"\nexport const UPDATE_POST_FILTER = \"update entire filter, pieced together earlier\"\nexport const UPDATE_CLASS_ID = \" restricting filter to particular class\"\nexport const LOADING_SCROLL = \"loading next infinite scroll page\"\nexport const APPEND_SEARCH_RESULTS = \"appending these next few posts\";\nexport const SET_REACT_POST_DETAILS = \"this is the post details for the react client, share l8r.\"\n","import { combineReducers} from \"redux\"\nimport {FETCHING,\n  SET_SEARCH_RESULTS,\n  UPDATE_POST_FILTER,UPDATE_CLASS_ID,\n  LOADING_SCROLL,\n  APPEND_SEARCH_RESULTS,\nSET_REACT_POST_DETAILS,} from '../ActionTypes/ActionTypes'\n\n\n\nconst misc = {\n  \"Instructor has answered\": false,\n  \"Student has answered\": false,\n}\n\nconst tags_hardcoded={\n    \"hw1\": false,\n    \"hw2\": false,\n    \"hw3\": false,\n    \"hw4\": false,\n    \"project\": false,\n  };\n\n\nconst initialState = {\n  PiazzaSearchResults : [],\n    filterState:{\n        ...misc,\n        searchText: \"\",\n        tags:tags_hardcoded,\n    },\n\n    pageState:{\n        loading:false,\n        searchResults: undefined,\n        scrollLoading:false,\n        piazzaPostDetails: [],\n    }\n}\n\nconst pageState =  (state=initialState.pageState,action)=>{\n  let newState;\n  switch(action.type){\n\n        case FETCHING:\n            newState = Object.assign({},state,{loading:true})\n            return newState\n        case LOADING_SCROLL:\n            return Object.assign({},state,{scrollLoading:true})\n        case SET_SEARCH_RESULTS:\n          return Object.assign({},state,{loading:false,scrollLoading:false})\n        case SET_REACT_POST_DETAILS:\n          return Object.assign({},state,{loading:false, piazzaPostDetails: action.data})\n        case APPEND_SEARCH_RESULTS:\n        /* if status =200 and empty results that means we reached the end.*/\n          if(action.status ===200 && ! action.results.length){\n            return Object.assign({},state,{scrollLoading:true})\n          }\n          else{\n            return Object.assign({},state,{scrollLoading:false})\n          }\n        default:\n            return state;\n    }\n}\n\nconst filterState  = (state=initialState.filterState,action)=>{\n    switch(action.type){\n        case UPDATE_CLASS_ID:\n          return {\n            ...state,\n            classid: action.id\n          }\n        case UPDATE_POST_FILTER:\n        /* the entire filter is updated\n        and calls this when something is modified\n        in ResponsiveSearchBox*/\n          return action.filter\n        default:\n          return state;\n    }\n}\n\n\n\nconst searchState = (state=initialState.PiazzaSearchResults,action)=>{\n    switch(action.type){\n        case SET_REACT_POST_DETAILS:\n          return {\n            ...state,\n            detailIds: action.data\n          }\n        case SET_SEARCH_RESULTS:\n            if(action.status===500){\n                return state\n              }\n            else if(action.status ===200){\n                return {\n                ...state,\n                results: action.results,\n                cursor: action.cursor\n              }\n            }\n            else if(action.status===303){\n               return state\n            }\n            break;\n          case APPEND_SEARCH_RESULTS:\n              return {\n                ...state,\n                results: state.results.concat(action.results),\n                cursor: action.cursor\n              }\n        default:\n            return state\n    }\n}\n\n\n\n\nexport default combineReducers({\n    searchState,\n    pageState,\n    filterState,\n});\n\n\n\n/* maybe move these to a file ./selectors.js\nThese are state selecors, we put them here and reference them in map state to props,\nputting them here is better.\n*/\nexport const pizzaPostIds = (state) =>state.searchState.detailIds\nexport const getPiazzaDetails = (state)=> state.pageState.piazzaPostDetails\nexport const getCursor = (state)=>state.searchState.cursor\nexport const isSearchPageLoading = (state)=>state.pageState.loading\nexport const isInfiniteLoading = (state)=>state.pageState.scrollLoading\nexport const searchResults = (state) => state.searchState.results\nexport const SearchPageFilters = (state) => state.filterState\n","/**  @jsx jsx */\n/* @jsxFrag React.Fragment */\nimport { css, jsx } from '@emotion/core';\n\nconst checkStylez = css`\n  img {\n    width: 15px;\n    height: 15px;\n    display: inline-block;\n  }\n  margin: -2px 6px -10px 0;\n\n  font-size: 1.25em;\n`;\n\nexport const MissingCheckbox = (props)=>{\n  const {term} = props;\n\n  return (\n    <span css={checkStylez}>\n      <img src=\"/static/negative-check.png\"\n          alt=\"This search term was not found in the result\"/>\n      {term}\n    </span>\n  )\n}\n\n\n\nexport const GoodCheckbox = (props)=>{\n  const {term} = props;\n\n  return (\n    <span css={checkStylez}>\n      <img src=\"/static/positive-check.png\"\n          alt=\"This search term was found!\"/>\n      {term}\n    </span>\n  )\n}\n","import {SET_SEARCH_RESULTS,\n  FETCHING,UPDATE_POST_FILTER,LOADING_SCROLL,\nAPPEND_SEARCH_RESULTS,\nSET_REACT_POST_DETAILS} from '../ActionTypes/ActionTypes'\nimport { G_SRCH_RSLTS_URL} from '../ActionTypes/UrlTypes';\n\nimport axios from \"axios\";\nimport qs from \"query-string\";\n/*\n\nASYNC ACTIONS ARE FUNCTIONS THAT DISPATCH ACTIONS MEANWHILE CALLING\nAPI'S AND OTHER THINGS\n\n*/\n\nconst HTTP_MSGS ={\n    404:\"NO RESULTS\",\n    405:\"CAN'T CONNECT TO SERVER\"\n}\n\n\nexport const set_filter = (filter) =>{\n  return {\n    type:UPDATE_POST_FILTER,\n    filter\n  }\n}\n\n// the type fetching is first state of the sequence\nexport const INIT_FETCH= ()=>({\n    type:FETCHING\n})\nexport const INIT_SCROLL = () => ({\n  type: LOADING_SCROLL\n})\nconst initialData = {\n  \"results\": [],\n  \"cursor\": null\n}\nexport const updateSearchResults = (status=404,data=initialData) =>{\n  return {\n      type:SET_SEARCH_RESULTS,\n      status:status,\n      results:data[\"results\"],\n      cursor: data[\"cursor\"],\n  }\n}\n\nconst updatePostDetailsReact = (status=500,data=[]) =>{\n  return {\n    type: SET_REACT_POST_DETAILS,\n    status,\n    data\n  }\n}\n\n\nexport const appendSearchResults= (status,data=initialData) =>({\n    type:APPEND_SEARCH_RESULTS,\n    results:data[\"results\"],\n    cursor: data[\"cursor\"],\n    status\n})\n\n\n\nexport const DetailsJsonSearchSequence = (ids) => dispatch => {\n  dispatch(INIT_FETCH());\n\n\n  axios['get'](`/api/json-details?dump=${ids.join(\",\")}`)\n  .then(function(resp){\n    if(resp.status===200){\n      dispatch(updatePostDetailsReact(resp.status,resp.data.dump));\n      return;\n    }\n    else{\n        this.reject({\n          \"code\": resp.status,\n          \"message\": resp\n        });\n    }\n  })\n  .catch(function(e){\n    console.log(`\\n\\n\\t${JSON.stringify(e)}\\n`);\n\n    /* this makes page state rerturn undefined.\n\n    */\n    dispatch((500,[])\n    );\n    return;\n  })\n}\n\n\nexport const InfiniteScroll = (filters,pickUpFromHere) => dispatch =>{\n  dispatch(INIT_SCROLL())\n  var deepcopy = JSON.parse(JSON.stringify(filters))\n  let encodedtags = []\n  Object.keys(deepcopy.tags).forEach(function(key){\n    if(deepcopy.tags[key]){\n      encodedtags.push(key)\n    }\n  })\n  deepcopy.skip = pickUpFromHere;\n  deepcopy.tags = encodedtags.join(\",\"); // url encode does not work with objects\n\n\n\n  setTimeout(function(){\n\n    axios['get'](`${G_SRCH_RSLTS_URL}?${qs.stringify(deepcopy)}`,\n    {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8',\n      }\n    })\n    .then(function(resp){\n      if(resp.status===200){\n        dispatch(appendSearchResults(200,resp.data));\n        return;\n      }\n      else {\n        this.reject({\n          \"code\": resp.status,\n          \"message\": resp\n        });\n      }\n    })\n    .catch(function(eer){\n      console.log(eer);\n      dispatch(appendSearchResults([]));\n\n    })\n\n\n  },420);\n}\n\nconst LIMIT = 15\nexport const SearchSequence = (filters) => dispatch => {\n\n    // Set state to loading\n    dispatch(INIT_FETCH());\n\n    // Async calls to the server\n    var encodedfilter = JSON.parse(JSON.stringify(filters))\n    /*Fetchlifecycle methods implmented in search\n    action rather than seperate file\n\n    we would still have a then/catch clause in this\n    function anyways.\n        */\n    // we will use get request because i was having trouble doing pagination with th post request\n    // also i think this is much easier\n    let encodedtags = []\n    Object.keys(encodedfilter.tags).forEach(function(key){\n      if(encodedfilter.tags[key]){\n        encodedtags.push(key)\n      }\n    })\n    encodedfilter.tags = encodedtags.join(\",\"); // url encode does not work with objects\n    axios['get'](`${G_SRCH_RSLTS_URL}?${qs.stringify(encodedfilter)}`,\n      {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8',\n        }\n      })\n    .then(function(resp){\n      if(resp.status===200){\n        dispatch(updateSearchResults(resp.status,resp.data));\n        if(resp.data.results.length < LIMIT){\n          dispatch(InfiniteScroll(encodedfilter,resp.data.cursor))\n        }\n          return;\n      }\n      else{\n        if(resp.status === 400){\n          this.reject({\n            \"code\": resp.status,\n            \"message\": HTTP_MSGS[`${resp.status}`]\n          })\n        }\n        else if(resp.status === 404){\n          this.reject({\n            \"code\": resp.status,\n            \"message\": HTTP_MSGS[`${resp.status}`]\n          })\n\n        }\n        else{\n          this.reject({\n            \"code\": resp.status,\n            \"message\": resp\n          });\n        }\n\n      }\n    })\n    .catch(function(e){\n      console.log(`\\n\\n\\t${JSON.stringify(e)}\\n`);\n\n      /* this makes page state rerturn undefined.\n\n      */\n      dispatch(updateSearchResults(500,[])\n      );\n      return;\n    })\n\n\n\n}\n","export const FILTER_GET = \"GETTING POSTS BY CLASS ID\";\nexport const PCLASS_POST = \"POSTING_CLASS_ARCHIVE\";\n\n\nexport const G_SRCH_RSLTS_URL = \"/api/search\";\n","/**  @jsx jsx */\n/* @jsxFrag React.Fragment */\nimport { css, jsx } from '@emotion/core';\n\nconst InfiniteScrollAlert = ()=>{\n  /*https://codepen.io/ericmatthys/pen/FfcEL\n  unlicensed author Eric Matthys@codepen.io\n  */\n  const style = css`\n      margin-left: auto;\n      margin-right:auto;\n      margin-bottom:50px;\n      padding-top:5px;\n      width: 64px;\n      height: 64px;\n      border-radius: 50%;\n      perspective: 800px;\n\n\n    .inner {\n      position: absolute;\n      box-sizing: border-box;\n      width: 100%;\n      height: 100%;\n      border-radius: 50%;\n      border:1px solid cornflowerblue;\n    }\n    .inner.one {\n      left: 0%;\n      top: 0%;\n      animation: rotate-one 1s linear infinite;\n      border-bottom: 3px solid #EFEFFA;\n    }\n\n    .inner.two {\n      right: 0%;\n      top: 0%;\n      animation: rotate-two 1s linear infinite;\n      border-right: 3px solid #EFEFFA;\n    }\n\n    .inner.three {\n      right: 0%;\n      bottom: 0%;\n      animation: rotate-three 1s linear infinite;\n      border-top: 3px solid #EFEFFA;\n    }\n\n    @keyframes rotate-one {\n      0% {\n        transform: rotateX(35deg) rotateY(-45deg) rotateZ(0deg);\n      }\n      100% {\n        transform: rotateX(35deg) rotateY(-45deg) rotateZ(360deg);\n      }\n    }\n\n    @keyframes rotate-two {\n      0% {\n        transform: rotateX(50deg) rotateY(10deg) rotateZ(0deg);\n      }\n      100% {\n        transform: rotateX(50deg) rotateY(10deg) rotateZ(360deg);\n      }\n    }\n\n    @keyframes rotate-three {\n      0% {\n        transform: rotateX(35deg) rotateY(55deg) rotateZ(0deg);\n      }\n      100% {\n        transform: rotateX(35deg) rotateY(55deg) rotateZ(360deg);\n      }\n    }\n  `;\n  return (\n    <div css={style}>\n      <p> !INFINITE SCROLL!</p>\n      <div className=\"inner one\"></div>\n      <div className=\"inner two\"></div>\n      <div className=\"inner three\"></div>\n    </div>\n\n  );\n}\n\n\nexport default InfiniteScrollAlert;\n","import {createContext} from \"react\";\n\nexport const PostsSelected4Details = createContext({\n  selected: [],\n  update: ()=>{}\n});\n","/**  @jsx jsx */\n/* @jsxFrag React.Fragment */\nimport {Component} from \"react\"\nimport { css, jsx } from '@emotion/core';\nimport {connect} from 'react-redux'\nimport {Card} from \"@material-ui/core\"\n\n// import React from 'react';\n// import { Paper,Card,CardHeader,CardContent } from '@material-ui/core'\nimport {isInfiniteLoading,getCursor,searchResults,SearchPageFilters} from '../../../Reducers/index.js'\nimport {GoodCheckbox,MissingCheckbox} from \"../../../components/CheckboxArt.js\"\nimport {InfiniteScroll} from '../../../Actions/searchActions'\nimport InfiniteScrollAlert from \"../../../components/InfiniteScrollAlert.js\"\nimport {PostsSelected4Details} from \"../SearchPageContext.js\"\n\n\nconst stateToProps = state => {\n  return {\n    isLoading: isInfiniteLoading(state),\n    searchResults: searchResults(state),\n    filters: SearchPageFilters(state),\n    cursor: getCursor(state)\n  }\n}\n\nconst dispatchToProps = {\n  InfiniteScroll\n};\n\n// not to remove your code luffy sorry i jsut needed to used\n// component did mount and component willupdate\nclass SearchResults extends Component{\n\n  constructor(){\n    super();\n    this.scrollListener = this.scrollListener.bind(this)\n\n  }\n\n  componentDidMount(){\n    window.addEventListener(\"scroll\",this.scrollListener)\n  }\n  componentWillUnmount(){\n    window.removeEventListener(\"scroll\",this.scrollListener)\n  }\n\n  scrollListener(){\n    // console.log(this.props.isLoading);\n      if(this.props.searchResults.length && !this.props.isLoading){\n        if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight) {\n            //search agin with the filters and also the mongodb id of the last element\n            //to continue\n               this.props.InfiniteScroll(this.props.filters,\n                          this.props.cursor)\n           }\n      }\n  }\n\n  render(){\n    let results = this.props.searchResults;\n    let active = this.props.active;\n    return (\n\n          <div>\n            {results !== undefined && !results && <h3>zero search results</h3>}\n             {results && results.map(function(result,index){\n               return (<ResultCard selected={active.includes(result.id)} key={`result-${index}`} topic = {result}/>)\n             })}\n             {this.props.isLoading && <InfiniteScrollAlert />}\n           </div>\n    )\n  }\n\n}\n\n\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;;;;;;;;;;;;;;;;                 ;;;;;;;;;;;;;;\n//;;;;;;;;;;;;;;;; Helper functions;;;;;;;;;;;;;;\n;;;;;;;;;;;;;;;;;;                 ;;;;;;;;;;;;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\nfunction searchTermsPresent(summariez,unique){\n  let style =css`\n  margin-left: 25px;\n  color: grey;\n  `;\n  return (<div css={style}>\n      {Object.keys(summariez).map(function(term){\n      if(summariez[term].length){\n        return <GoodCheckbox key={`good-term-${term}-${unique}`} term={term} />\n      }\n      else{\n        return <MissingCheckbox key={`missing-term-${term}-${unique}`} term={term} />\n      }\n\n    })}\n    </div>)\n}\n\n\n/* helper function to display short summaries of each keyw\n\n*/\nfunction metaresult(term,dict,unique){\n  const paraStyle=css`\n  padding-left: 15px;\n  font-family: Roboto;\n  font-size:1.1em;\n  color: #444;\n  `;\n\n  return (<div key={`meta-result-${term}-${unique}`}>\n\n    {dict[term].length  ? dict[term].map(function(short,index){\n\n      let content = short[0].replace(term,`<b>${term}</b>`)\n      return (\n        <span key={`${term}-result-${index}`} css={paraStyle} dangerouslySetInnerHTML={{__html:`...${content}...`}}></span>\n      )\n    }) : \"\"}\n  </div>);\n\n\n\n}\n/* display the tags, the folders this answer appears in,\ngood question good answer remarks\n*/\nfunction tagsView(topic){\n  const tagsStyle = css`\n    padding:10px;\n    font-weight:600;\n    font-size:1.0em;\n    color:#E9C300;`;\n  const goodthingStyle = css`\n    padding:10px;\n    font-weight:600;\n    font-size:1.0em;\n    color:#4AC16C;`;\n  let tags = topic.tags;\n  // let tagString = \"\";\n  // tagString+=tags[tag]+\"\\t\\t\\t\\t\"; // defined but never used\n  let tagsList = [];\n  const TagsView =  props =>{\n      return <span css={tagsStyle}>{props.text}</span>\n  }\n  const GoodThing = props =>{\n    return (<span css={goodthingStyle}>{props.text} +{props.hits}</span>)\n  }\n\n  tags.forEach(function(tag){\n    tagsList.push((<TagsView key={`tags-${tag}`} text={tag} />))\n  })\n\n  if(topic[\"good-q\"]){\n    tagsList.push(<GoodThing key={`good-question-${topic.created}`}\n                    text={\"Good Question\"} hits={topic[\"good-q\"]} />)\n  }\n  if(topic[\"good-a\"]){\n    tagsList.push(<GoodThing key={`good-answer-${topic.created}`}\n                    text={\"Good Answer\"} hits={topic[\"good-a\"]} />)\n  }\n\n  return (\n    <div style={{padding:\"5px\"}}>{tagsList}</div>\n  )\n}\n\n\n\nfunction ResultCard(props){\n    let topic = props.topic;\n    let title = topic.post.subject;\n    // let question = topic.history[0].content;\n\n\n    const subjectStyle =css`\n      font-weight: bold;\n      padding: 15px;\n      color: #007FC7;\n      font-size: 1.3em;\n    `;\n    const isSelectedStyle=css`\n     border: 1px solid #007fc7;\n    `;\n\n\n    return (\n      <PostsSelected4Details.Consumer>\n        { ({update}) =>\n          (<div onClick={()=>{\n            update(topic.id);\n            }}>\n            <Card\n\n                 css={props.selected && isSelectedStyle}\n                 elevation={1.0}\n                 style={{marginLeft:\"70px\",marginRight:\"70px\",marginBottom:\"20px\",padding:\"20px\"}}\n                 >\n                {tagsView(topic)}\n                {topic.summariez && searchTermsPresent(topic.summariez,topic.date)}\n                <div dangerouslySetInnerHTML={{__html:title}} css={subjectStyle}></div>\n                <hr/>\n                {topic.summariez && Object.keys(topic.summariez).map(function(term){\n                  return metaresult(term,topic.summariez,topic.created);\n                })}\n\n            </Card>\n            </div>\n          )\n        }\n      </PostsSelected4Details.Consumer>\n    );\n\n}\n\n\n\nexport default connect(stateToProps,dispatchToProps)(SearchResults);\n","/** @jsx jsx */\n/* @jsxFrag React.Fragment */\nimport  React from \"react\";\nimport { css, jsx } from '@emotion/core';\nimport {Button,CircularProgress} from \"@material-ui/core\"\n\n\n\n\n\n const tags_contaier=css`\n  display: flex;\n  flex-wrap: wrap;\n  padding-top: 25px;\n  width: 100%;\n  @media (max-width: 768px) {\n    width:100%;\n  }\n `;\nconst hamburgerIcons=css`\n  display: none;\n  @media (max-width: 768px) {\n    display: block;\n    font-size: 32px;\n    cursor: pointer;\n    &:hover{\n      background-color: LemonChiffon;\n    }\n}`\n\n\nconst gen = css`\n  display: flex;\n  @media (max-width: 768px) {\n    display: block;\n  }\n`\nfunction ResponsiveSearchBox(props) {\n  var [hamShow,toggleBurger] = React.useState(false);\n\n\n  const searchInput = css`\n    height:2vw;\n    width:90%;\n    font-size:1.90vw;\n    font-weight:800;\n    color:#2ecc7a;\n    padding:15px;\n    border-radius:30px;\n    background-color:rgba(0,0,0,0.0);\n    border:01px solid rgba(0,0,0,0.4);\n    box-shadow:2px 2px #00000025;\n    &:active,\n    &:focus{\n      outline:none;\n      background-color:rgba(0,0,0,0.05);\n    }\n  `\n  const navItem=css`\n  margin: 5px;\n  font-size:1.2vw;\n  display:inline-block;\n  &.li{\n    color:red;\n    text-decoration: none;\n  }\n  &.selected{\n    color:red;\n    background-color: LemonChiffon;\n  }\n  @media (max-width: 768px){\n    font-size:25px;\n\n    margin: 10px 0 10px 0;\n      &:hover{\n        background-color: LemonChiffon;\n      }\n    }\n  }\n  `;\n\n    const navStyles = css`\n    @media (max-width: 768px) {\n      position: sticky;\n      top: 0;\n      overflow:hidden;\n      transition: width 1s;\n      display: block;\n      z-index: 5;\n      position: absolute;\n      background-color: Beige;\n      font-size: 32px;\n      width: ${hamShow ?  '80vw' : '0px'};\n      height: 100vh;\n      overflow: scroll;\n        &::before{\n          content: ☰\n        }\n      }\n    }`\n\n\n    const updateSearchText = (text)=>{\n      props.updateFilter({\n        ...props.filters,\n        searchText: text\n      });\n      return;\n    }\n    const updateTags = (tags)=>{\n      props.updateFilter({\n        ...props.filters,\n        tags\n      });\n      return;\n    }\n\n    const updateMisc = (key,value)=>{\n      // misc items are held at the top level of the search\n      let obj = {\n        ...props.filters\n      }\n      obj[key] = value;\n      props.updateFilter(obj)\n      return;\n    }\n  return (\n    <div css={css`width: auto;`}>\n    {!hamShow &&\n      <div css={hamburgerIcons} onClick={()=>toggleBurger(!hamShow)} >\n        <i className=\"fa\">☰</i>\n      </div>}\n\n      <div className=\"contents\" >\n        <div className=\"inner\" css={navStyles}>\n          <div css={gen}>\n            <div css={css`display:flex; justify-content: space-between`}>\n              <></>\n              <div css={hamburgerIcons}onClick={()=>toggleBurger(!hamShow)} >❮</div>\n            </div>\n          </div>\n\n          <div id=\"search-filter-box\" css={check}>\n            <div css={css`display:flex;width:100%;`}>\n\n            {/* this is the search input for Search text. it can be broken up in to words\n              seperated by \" \" spaces.*/}\n              <div css={css`flex:11;alignment-baseline:center;`} onClick={function(e){e.stopPropagation()}} >\n                <label htmlFor=\"search-text\">\n                  <input type=\"text\"\n                  placeholder={\"help clarification tip\"}\n                  css={searchInput} value={props.filters.searchText}\n                    onChange={(event) => {updateSearchText(event.target.value)}} />\n                  </label>\n              </div>\n\n            <div css={css`alignment-baseline:center;flex:1;padding:5px;`}>\n              {props.loading ? (<CircularProgress />) :\n                (<Button  size=\"large\" variant=\"outlined\" onClick={function(){\n                  // we use the statetoprops item filters\n                  // and the dispatch to props search sequence.\n                  props.SearchSequence(props.filters);\n                  toggleBurger(!hamShow); }}>\n\n                  Search\n\n                </Button>)}\n                </div>\n                </div>\n              <div id=\"misc-container\" css={tags_contaier}>\n\n                <div style={{cursor:\"pointer\"}} key={`Instructor has answered`} className=\"check-container\" css={navItem}>\n                   <input type=\"checkbox\" id={`Instructor has answered`}\n                    checked={props.filters[\"Instructor has answered\"]}\n                    onChange={function(){\n\n                     updateMisc(\"Instructor has answered\",!props.filters[\"Instructor has answered\"])\n\n                    }} />\n                   <label htmlFor={`Instructor has answered`}></label>\n                   <div onClick={function(){\n\n                    // Called Action to change tags\n                    updateMisc(\"Instructor has answered\",!props.filters[\"Instructor has answered\"])\n                   }}className=\"tag\">{\"Instructor has answered\"}</div>\n                 </div>\n                 {/*  end instructor                                        */}\n\n                 <div style={{cursor:\"pointer\"}} key={`Student has answered`} className=\"check-container\" css={navItem}>\n                    <input type=\"checkbox\" id={`Student has answered`}\n                     checked={props.filters[\"Student has answered\"]}\n                     onChange={function(){\n\n                      // Called Action to change tags\n                      updateMisc(\"Student has answered\",!props.filters[\"Student has answered\"])\n                     }} />\n                    <label htmlFor={`Student has answered`}></label>\n                    <div onClick={function(){\n\n                     // Called Action to change tags\n                     updateMisc(\"Student has answered\",!props.filters[\"Student has answered\"])\n                    }}\n                    className=\"tag\">{\"Student has answered\"}</div>\n                  </div>\n              </div>\n              {/*  end student                                        */}\n\n\n            <h3 css={css`font-weight:400;font-size:20px;`}>Folders </h3>\n              <div id=\"tags-list\" css={tags_contaier}>\n              {/* the list of true/false filters, the checkbox will be used, but not applied yet.\n                the filter is saved in the site memory with other filters.\n                */}\n                    {Object.keys(props.filters.tags).map(function(key){\n                      return (<div style={{cursor:\"pointer\"}} key={`tag-check-${key}`} className=\"check-container\" css={navItem}>\n                         <input type=\"checkbox\" id={`tag-${key}`}\n                          checked={props.filters.tags[key]}\n                          onChange={function(){\n\n                          let newTags = props.filters.tags;\n                           newTags[key] = !newTags[key];\n                           // Called Action to change tags\n                           updateTags(newTags)\n\n                          }} />\n                         <label htmlFor={`tag-${key}`}></label>\n                         <div onClick={function(){\n\n                         let newTags = props.filters.tags;\n                          newTags[key] = !newTags[key];\n                          // Called Action to change tags\n                          updateTags(newTags)\n\n                         }}\n                         className=\"tag\">{key}</div>\n                       </div>)\n                    })}\n                    </div>\n              <div>\n\n              </div>\n          </div>\n\n\n\n\n        </div>\n     </div>\n    </div>\n  );\n}\n\nexport default ResponsiveSearchBox;\n\n\nconst check = css`\n.tag{\n  width: auto;\n  color:rgba(0,0,0,0.2)\n  margin:10px;\n}\n&{\n  margin: 5px;\n}\nlabel{\n  width: auto;\n}\nspan{\n  width: auto;\n}\n@media (min-width: 768px) {\n  width: 80vw;\n  margin: auto;\n  padding: 50px;\n\n\n}\n\n\ninput[type=\"checkbox\"]{\n     display: none;\n   }\n\n   .check-container{\n     display:flex;\n     position:relative;\n     width:200px;\n     height:auto;\n   }\n\n   input[type=\"checkbox\"] + label{\n     z-index:15;\n     position:absolute;\n     left:0;\n     top:-1px;\n     bottom:10px;\n     right:10px;\n     transition:all 0.3s ease;\n     cursor:pointer;\n     width:15px;\n     border:3px solid #666;\n    //  border-radius:50%;\n     height:15px;\n   }\n\n   .tag{\n     margin-left:40px;\n   }\n\n   input[type=\"checkbox\"]:checked + label{\n     z-index:15;\n     display:inline-block;\n     transform:rotate(-50deg) translate(5px,-9px);\n     transition:all 0.3s ease;\n     width:20px;\n     border-radius:0%;\n     border-top-color:transparent;\n      border-right-color:transparent;\n      border-bottom-color:#2ecc71;\n      border-left-color:transparent;\n     height:20px;\n   }\n\n\n   input[type=\"checkbox\"]:checked + label:before{\n     content:\"\";\n     position:absolute;\n     right:0;\n     bottom:-3px;\n     width:100%;\n     height:15px;\n     border-left:4px solid #2ecc7a;\n   }\n`;\n\n\n\n\n\n/* <div css={tags_contaier}>\n            <div className=\"check-container\" css={navItem}>\n               <input type=\"checkbox\" id=\"instructor-answered\" value={chcks.i_answer}\n               onChange={function(){\n                 updateChecks({\n                   ...chcks,\n                   i_answer: !chcks.i_answer\n                 })\n                }} />\n               <label htmlFor=\"instructor-answered\"></label>\n               <div className=\"tag\">Instructor has answered</div>\n             </div>\n             <div className=\"check-container\" css={navItem}>\n                <input type=\"checkbox\" id=\"student-answered\" value={chcks.s_answer}\n                onChange={function(){\n                  updateChecks({\n                    ...chcks,\n                    s_answer: !chcks.s_answer\n                  })\n                 }} />\n                <label htmlFor=\"student-answered\"></label>\n                <div className=\"tag\">Student has answered</div>\n              </div>\n\n            </div > */\n","import React from 'react'\nimport {connect} from 'react-redux';\nimport { LinearProgress } from \"@material-ui/core\"\n\n\nimport ResponsiveSearchBox from './ResponsiveSearchBox'\nimport {SearchSequence,set_filter} from '../../../Actions/searchActions'\nimport {isSearchPageLoading,SearchPageFilters} from '../../../Reducers/index.js'\n\n\n\n\n\nconst stateToProps = state =>({\n  isLoading: isSearchPageLoading(state),\n  filters: SearchPageFilters(state)\n})\n\nconst dispatchToProps = {\n  SearchSequence,\n  set_filter,\n}\n\nconst SearchBox = (props)=>{\n  const {isLoading, filters} = props;\n    return (\n        <div>\n          {/*Since we are no longer doing\n            http in the component but rather\n            searchActions.js, wand not networokspinner*/}\n           {isLoading && (<LinearProgress />)}\n\n          <ResponsiveSearchBox\n              loading={props.isLoading} filters={filters}\n              SearchSequence={props.SearchSequence} updateFilter={props.set_filter}\n              />\n\n        </div>\n    )\n}\n\n\n\nexport default connect(stateToProps,dispatchToProps)(SearchBox);\n","/**  @jsx jsx */\n/* @jsxFrag React.Fragment */\nimport { css, jsx } from '@emotion/core';\nimport {Link} from \"react-router-dom\"\n// import {Link} from \"react-router-dom\";\n\nfunction LinkToDetails(props){\n  const stickybutton = css`\n    background-color: #A0A0A0;\n    text-color: #fff;\n    padding:10px;\n    border-radius: 25%;\n      position: fixed;\n      top: 30px;\n      right: 0px;\n      a{\n        text-decoration: none;\n      }\n    `;\n  if(props.selected.length){\n    return (\n      <div css={stickybutton}>\n      {/*ALERT, IN PRODUCTION WE NEED TO REMOVE THE LOCALHOST:5000 part.*/}\n        <Link to=\"/details\">View details <br />of {props.selected.length} posts!</Link>\n      </div>\n    )\n  }\n  else{\n    return(<div></div>)\n  }\n}\n\nexport default LinkToDetails\n","import React from \"react\"\nimport { Divider } from '@material-ui/core'\n\nimport SearchResults from './Components/SearchResults'\nimport SearchBox from './Components/SearchComponent'\nimport {PostsSelected4Details} from \"./SearchPageContext.js\"\nimport LinkToDetails from \"../../components/ReactLinkToDetails.js\";\n\n\nconst SearchPage=(props)=>{\n\n    return (\n        <div className=\"SearchContainer\">\n          <SearchBox />\n          <Divider variant=\"middle\"/>\n          {/* We have a context Provider\n            to hold the local state of the each active post.*/}\n          <PostsSelected4Details.Consumer>\n          {\n            ({selected}) =>\n              (<div>\n                <LinkToDetails selected={selected} />\n                <SearchResults active={selected}/>\n\n              </div>)\n          }\n\n          </PostsSelected4Details.Consumer>\n        </div>\n      )\n}\n\n\nexport default SearchPage;\n","import {  css } from '@emotion/core';\n\n\nconst style = css`\n\n.tag{\n  color: orange;\n}\n.reply {\n  padding: 15px 15px 15px 10px;\n  box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);\n  margin-bottom: 10px;\n}\n.followup::before {\n  content: \"|\";\n  margin-right:10px;\n  font-size: 200%;\n}\n.followup {\n  padding-left: 15px;\n}\n\n.question-subject{\n  font-size:200%;\n  font-stretch: 150%;\n}\n\n`;\n\n\nexport default style\n","/**  @jsx jsx */\n/* @jsxFrag React.Fragment */\nimport { css, jsx } from '@emotion/core';\nimport {Button} from \"@material-ui/core\";\n// import {Link} from \"react-router-dom\";\n\nfunction LinkToDetails(props){\n  const hidden =css`\n  position: absolute;\n  left: -9999px;\n  `\n  const copyToClipboard = () =>{\n    var copyText = document.getElementById(\"myInput\");\n    copyText.select();\n    copyText.setSelectionRange(0, 99999);\n    document.execCommand(\"copy\");\n\n    var tooltip = document.getElementById(\"myTooltip\");\n    tooltip.textContent = \"Copied!\"\n    console.log(\"copied!\");\n  }\n  const copytext = css`\n    position: relative;\n    display: inline-block;\n    left: 40%;\n\n    p{\n      background-color: rgba(216,216,216,0.2)\n    }\n\n\n   .tooltiptext {\n    visibility: hidden;\n    width: 140px;\n    background-color: #555;\n    color: #fff;\n    text-align: center;\n    border-radius: 6px;\n    padding: 5px;\n    position: absolute;\n     top: 150%;\n    left: 50%;\n    margin-left: -75px;\n    opacity: 0;\n    transition: opacity 0.3s;\n  }\n\n  .tooltiptext::before {\n    content: \"\";\n    position: absolute;\n    bottom: 100%;\n    left: 50%;\n    margin-left: -5px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: #555 transparent transparent transparent;\n  }\n\n  &:hover .tooltiptext {\n    visibility: visible;\n    opacity: 1;\n  }\n  `\n\n  const stickybutton = css`\n      position: fixed;\n      top: 0px;\n      width:100vw;\n      height: 15px;\n\n      a{\n        text-decoration: none;\n      }\n    `;\n  if(props.ids.length){\n    const hostname = window.\n    return (\n      <div css={stickybutton}>\n      {/*ALERT, IN PRODUCTION WE NEED TO REMOVE THE LOCALHOST:5000 part.*/}\n      <input type=\"text\" readOnly css={hidden} value={`${window.location.protocol}//${window.location.host}/render/posts?dump=${props.ids.join(\",\")}`} id=\"myInput\" />\n    <Button type=\"button\"  onClick={copyToClipboard} css={copytext}>\n      <p>Share <br /> {props.ids.length} posts with a friend!</p>\n          <span className=\"tooltiptext\" id=\"myTooltip\">Copy to clipboard</span>\n        </Button>\n\n      </div>\n    )\n  }\n  else{\n    return(<div></div>)\n  }\n}\n\nexport default LinkToDetails\n","/**  @jsx jsx */\n/* @jsxFrag React.Fragment */\nimport {  jsx } from '@emotion/core';\nimport {Component} from 'react'\nimport { Divider } from '@material-ui/core'\nimport { LinearProgress } from \"@material-ui/core\"\nimport {Link} from \"react-router-dom\"\nimport {connect} from 'react-redux';\nimport {Button} from \"@material-ui/core\";\n\nimport DetailsStyle from \"./style.js\"\nimport {isSearchPageLoading,\n        getPiazzaDetails} from \"../../Reducers/index.js\"\nimport {DetailsJsonSearchSequence} from  \"../../Actions/searchActions.js\"\nimport ShareLinkAlert from \"../../components/LinkToDetails.js\"\n\n\nconst stateToProps = state =>({\n  isLoading: isSearchPageLoading(state),\n  details: getPiazzaDetails(state),\n})\n\nconst dispatchToProps = {\n  DetailsJsonSearchSequence\n}\n\n\n\n\n\nclass DetailsPage extends Component {\n\n  componentDidMount(){\n    if(this.props.ids.length && this.props.ids.length !== this.props.details.length){\n      this.props.DetailsJsonSearchSequence(this.props.ids)\n    }\n  }\n\n  renderDetails(){\n    return (<div css={DetailsStyle}>\n      {this.props.details.length > 0 && this.props.details.map(function(post,index){\n        return (\n          <div key={`post-#-${index}`} className=\"post-card\">\n              {\n                post.tags.map(function(tag,tagI){\n                  return (\n                    <span key={`post-${index}-tag-${tagI}`}\n                          className=\"tag\">\n                      {tag}\n                    </span>\n                  )\n                })\n              }\n              <p className=\"question-subject\">{post.post.subject}</p>\n              <p className=\"question-content\">{post.post.content}</p>\n\n              <h6>Replies</h6>\n              {\n                post.replies.map(function(reply,replyI){\n                  return (\n                  <div key={`post-${index}-reply-${replyI}`}\n                      className=\"reply\">\n                    <p>{reply.reply}</p>\n                    {reply.followups.length > 0 && (<h6>Followups</h6>)}\n                    {\n                        reply.followups.length > 0 && reply.followups.map(function(followup,follI){\n                              return (\n                                <p key={`post-${index}-reply-${replyI}-followup-${follI}`}\n                                  className=\"followup\">\n                                  {followup.reply}\n                                </p>\n                              )\n                      })\n                    }\n                  </div>\n                  )\n                })\n              }\n\n\n\n              <hr />\n\n          </div>\n        )\n      })}\n\n    </div>)\n\n  }\n\n  render(){\n    let {isLoading,ids} = this.props;\n    return (\n        <div className=\"DetailsListContainer\">\n        {isLoading && (<LinearProgress />)}\n\n\n        <Button type=\"button\">\n          <Link to=\"/\" style={{zIndex: 5}}>\n            Back To Search\n            </Link>\n        </Button>\n        <ShareLinkAlert ids={ids}  />\n          <Divider variant=\"middle\"/>\n          {/* We have a context Provider\n            to hold the local state of the each active post.*/}\n          {!isLoading && this.renderDetails()}\n\n        </div>\n      )\n  }\n}\n\nexport default connect(stateToProps,dispatchToProps)(DetailsPage);\n","import React, {useState} from 'react'\nimport {Route} from \"react-router-dom\"\n\n\nimport './App.css';\nimport SearchPage from './Containers/SearchPage'\nimport DetailsPage from \"./Containers/DetailsPage\"\nimport {PostsSelected4Details} from \"./Containers/SearchPage/SearchPageContext.js\"\n\n// import Banner from \"./components/Banner.js\";\nfunction App() {\n\n  var [selected, setArray] = useState([])\n  const updateSelected = (id)=>{\n    let temp = []\n    if(selected.includes(id)){\n      // in order replicata mutually exclusive\n      // append function.\n      for(let i=0;i<selected.length;i++){\n        if(selected[i] === id){\n          continue;\n        }\n        else{\n          temp.push(selected[i])\n        }\n      }\n\n      // possibly instead use\n      // indexOf and delete?\n      setArray(temp);\n    }\n    else{\n      temp = JSON.parse(JSON.stringify(selected))\n      temp.push(id)\n      setArray(temp);\n    }\n\n  }\n\n\n  return (\n    <PostsSelected4Details.Provider\n        value={{\n            selected,\n            update: updateSelected\n          }}>\n      <div style={{fontFamily:\"Roboto\"}}>\n        <Route exact path=\"/\" >\n          <SearchPage />\n        </Route>\n        <Route exact path=\"/details\">\n          <DetailsPage ids={selected} />\n        </Route>\n      </div>\n      </PostsSelected4Details.Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter } from 'react-router-dom'\n\nimport { createStore,compose,applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux'\nimport ThunkMiddleware from 'redux-thunk'\n\nimport rootReducer from './Reducers/'\n\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// let el = compose(applyMiddleware(ThunkMiddleware),\n//     window.__REDUX_DEVTOOLS_EXTENSION__ &&\n//     window.__REDUX_DEVTOOLS_EXTENSION__());\nlet redux_dev = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();  \n\nlet store;\nif(redux_dev!==undefined){\n  store = createStore(rootReducer,compose(applyMiddleware(ThunkMiddleware),redux_dev));\n}\nelse{\n  store = createStore(rootReducer,applyMiddleware(ThunkMiddleware));\n}\n\n\nReactDOM.render(\n  <React.StrictMode>\n  \t<Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}